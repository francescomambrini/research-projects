 # == query: shared-obj-coord-original ==
 a-node $n2 := 
[ m/tag ~ "^v", afun != "ExD", is_member = 1, 
     parent a-node $n0 := 
     [ afun = "Coord", 
          ancestor a-root $n3 := [  ], 
           a-node $n1 := 
          [ afun = "Obj", m/tag !~ ".......a.", (m/tag ~ "^n" or m/tag ~ "^p") ] ] ];
>> for $n2.m/form,$n1.m/form,$n1.afun,$n1.m/tag,$n3.id give $1,$2,$3,$4,$5 sort by $4,$5

# == query: shared-obj-coord2 ==
a-node $nobj := 
[ afun = "Obj", m/tag ~ "^[np]......[^a]", 
     parent a-node $ncoord := 
     [ afun = "Coord", 
          2+x  a-node $nverb := 
          [ m/lemma !~ ".Reconstructed", m/tag ~ "^v" ] ] ];
          
# == query: part-adv-original ==
a-node $n1 := 
[ m/lemma !~ "εἰμί[0-9]*", m/tag ~ "^[vt]...[p]", 
     0x  a-node $n2 := 
     [ afun ~ "Obj" ], 
     parent a-node $n0 := 
     [ m/tag ~ "^v", 
           a-node $n3 := 
          [ m/tag ~ "[^v]......[^a].", afun ~ "Obj" ] ] ];

# == query: shared-obj-pronoun ==
a-node $ncoord := 
[ afun = "Coord", 
      a-node $nverb_1 := 
     [ m/lemma !~ ".Reconstructed", m/tag ~ "^v", 
           a-node $nobj := 
          [ afun = "Obj", m/tag ~ "^[na]......[^a]" ] ], 
      a-node $nverb_2 := 
     [ m/lemma !~ ".Reconstructed", m/tag ~ "^v", 
           a-node $npron := 
          [ afun = "Obj", m/tag ~ "^p......[^a]" ] ] ];

